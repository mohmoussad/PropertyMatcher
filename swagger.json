{
  "openapi": "3.0.0",
  "info": {
    "title": "Property Matching System API",
    "version": "1.0.0",
    "description": "API documentation for the Property Matching System"
  },
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new user",
        "description": "Register a new user with a role other than admin",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "phone": { "type": "string" },
                "password": { "type": "string" },
                "role": { "type": "string" },
                "status": { "type": "string" }
              },
              "required": ["name", "phone", "password", "role", "status"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "User registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "token": { "type": "string" }
              }
            }
          },
          "409": {
            "description": "Conflict error, user already exists"
          },
          "400": {
            "description": "Authorization error, admin role is not allowed"
          }
        }
      }
    },
    "/api/auth/register/admin": {
      "post": {
        "tags": ["Auth"],
        "summary": "Register a new admin user",
        "description": "Register a new admin user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": { "type": "string" },
                "phone": { "type": "string" },
                "password": { "type": "string" },
                "status": { "type": "string" }
              },
              "required": ["name", "phone", "password", "status"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Admin user registered successfully",
            "schema": {
              "type": "object",
              "properties": {
                "token": { "type": "string" }
              }
            }
          },
          "409": {
            "description": "Conflict error, admin user already exists"
          }
        },
        "security": [
          {
            "adminAuth": []
          }
        ]
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Auth"],
        "summary": "User login",
        "description": "Login a user with phone and password",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "phone": { "type": "string" },
                "password": { "type": "string" }
              },
              "required": ["phone", "password"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Login successful",
            "schema": {
              "type": "object",
              "properties": {
                "token": { "type": "string" }
              }
            }
          },
          "401": {
            "description": "Authentication failed, wrong credentials"
          }
        }
      }
    },

    "/api/propertyRequests": {
      "post": {
        "tags": ["Property Requests"],
        "summary": "Create a new property request",
        "description": "Create a new property request with the specified details",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "propertyType": { "type": "string" },
                "area": { "type": "number" },
                "price": { "type": "number" },
                "city": { "type": "string" },
                "district": { "type": "string" },
                "description": { "type": "string" }
              },
              "required": ["propertyType", "area", "price", "city", "district", "description"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Property request created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "propertyType": { "type": "string" },
                "area": { "type": "number" },
                "price": { "type": "number" },
                "city": { "type": "string" },
                "district": { "type": "string" },
                "description": { "type": "string" },
                "createdBy": { "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/propertyRequests/{id}": {
      "put": {
        "tags": ["Property Requests"],
        "summary": "Update an existing property request",
        "description": "Update the details of an existing property request",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Property request ID"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "description": { "type": "string" },
                "area": { "type": "number" },
                "price": { "type": "number" }
              },
              "required": []
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Property request updated successfully",
            "schema": {
              "type": "object",
              "properties": {
                "propertyType": { "type": "string" },
                "area": { "type": "number" },
                "price": { "type": "number" },
                "city": { "type": "string" },
                "district": { "type": "string" },
                "description": { "type": "string" },
                "createdBy": { "type": "string" }
              }
            }
          },
          "404": {
            "description": "Request not found or unauthorized"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/ads": {
      "post": {
        "tags": ["Ads"],
        "summary": "Create a new ad",
        "description": "Create a new ad with property details",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "propertyType": { "type": "string" },
                "area": { "type": "number" },
                "price": { "type": "number" },
                "city": { "type": "string" },
                "district": { "type": "string" },
                "description": { "type": "string" }
              },
              "required": ["propertyType", "area", "price", "city", "district", "description"]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Ad created successfully",
            "schema": {
              "type": "object",
              "properties": {
                "propertyType": { "type": "string" },
                "area": { "type": "number" },
                "price": { "type": "number" },
                "city": { "type": "string" },
                "district": { "type": "string" },
                "description": { "type": "string" },
                "createdBy": { "type": "string" }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/ads/{id}/matches": {
      "get": {
        "tags": ["Match Requests"],
        "summary": "Get matching property requests",
        "description": "Get property requests that match the criteria of an ad",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Ad ID"
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Page number"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Number of results per page"
          }
        ],
        "responses": {
          "200": {
            "description": "Matching property requests found",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "district": { "type": "string" },
                      "area": { "type": "number" },
                      "price": { "type": "number" },
                      "refreshedAt": { "type": "string", "format": "date-time" }
                    }
                  }
                },
                "total": { "type": "integer" }
              }
            }
          },
          "404": {
            "description": "Ad not found"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/api/admin/stats": {
      "get": {
        "tags": ["Statistics"],
        "summary": "Get user statistics",
        "description": "Retrieve statistics for users including ads and property requests",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Page number for pagination",
            "default": 1
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "integer",
            "description": "Number of results per page",
            "default": 10
          }
        ],
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully",
            "schema": {
              "type": "object",
              "properties": {
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": { "type": "string" },
                      "role": { "type": "string" },
                      "adsCount": { "type": "integer" },
                      "totalAdsAmount": { "type": "number" },
                      "requestsCount": { "type": "integer" },
                      "totalRequestsAmount": { "type": "number" }
                    }
                  }
                },
                "page": { "type": "integer" },
                "limit": { "type": "integer" },
                "total": { "type": "integer" },
                "hasNextPage": { "type": "boolean" },
                "hasPreviousPage": { "type": "boolean" }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    }
  }
}
